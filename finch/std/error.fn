docstring
""
Generic error/exception type; should generally be used anywhere we want to
terminate program execution and display an error message to the user. Runtime
introspection allows errors to report information about where in the code they
were raised and what values/types the problematic object(s) had, in certain
circumstances. Some of the included exceptions are based on those from
https://docs.python.org/3/library/exceptions.html.
""

public type error

		""
				A mostly self-explanatory error type that can be useful for testing.

				[example]
				assert(2 + 2 = 5, "optional custom message")
		""
		assertion
				""
				An assertion (invariant) that was expected to always be true during
				correct execution of this program evaluated to a false-like value; this
				indicates an issue with the original code and not its usage (if used
				correctly; that is, this error should never be used in place of an
				`ArgumentError`, for example).

				Assertion {} evaluted to {}

				If you are using an API developed by someone else, you should report
				this error to them (including a code sample, system information,
				versions of the relevant libraries, etc.); if the issue is with the
				Finch standard library, please open an issue at
				https://github.com/generic-github-user/finch/issues/new.
				""

		access
				reference
						"Attempt to access a reference that does not exist (undefined
						reference exception): {}"

				index
						"Index {} is out of bounds for a collection with size {}; the valid
						range is {}"

				import
						"Could not find module {}"

		value
				range
						"Expected {} to be in range {}"

				attribute
						"Object {} of type {} does not have attribute {}; valid attributes are {}"

				type
						"Expected object {} to have type {}; it is of type {}"


		fileSystem
				fileExists
						"A file already exists at the path {} and therefore cannot be created;
						if you want to create it anyway, look for an `overwrite` or `force`
						option in the documentation for the library you are using."

				fileNotFound
						"Requested path {} does not correspond to a file."

				permission
						"Process lacks the necessary permission to run {}"
