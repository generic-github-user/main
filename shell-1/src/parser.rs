use super::token::Token;
use super::node::Node;
use super::node::NodeType;

pub fn parse(tokens: Vec<Token>, verbose: bool) -> Node {
    // a list of indices representing a path through the abstract syntax tree generated by the
    // parser; used to keep track of the current parsing context
    let mut stack = Vec::<usize>::new();
    let mut root = Node {
        content: None,
        children: vec![],
        nodetype: NodeType::Program
    };

    return root;
}
